{{- /*
Generated from 'whizard-telemetry-cluster.rules' group from file://../../../ks-prometheus/manifests/whizard-telemetry-prometheusRule.yaml
Do not change in-place! In order to change this file first read following link:
https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack/hack
*/ -}}
{{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
{{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.whizardTelemetry }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ printf "%s-%s" (include "kube-prometheus-stack.fullname" .) "whizard-telemetry-cluster.rules" | trunc 63 | trimSuffix "-" }}
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
  labels:
    app: {{ template "kube-prometheus-stack.name" . }}
{{ include "kube-prometheus-stack.labels" . | indent 4 }}
{{- if .Values.defaultRules.labels }}
{{ toYaml .Values.defaultRules.labels | indent 4 }}
{{- end }}
{{- if .Values.defaultRules.annotations }}
  annotations:
{{ toYaml .Values.defaultRules.annotations | indent 4 }}
{{- end }}
spec:
  groups:
  - name: whizard-telemetry-cluster.rules
    rules:
    - expr: |-
        max by (cluster, node, workspace, namespace, pod, qos_class, phase, workload, workload_type) (
                  kube_pod_info{job="kube-state-metrics"}
                * on (cluster, namespace, pod) group_left (qos_class)
                  max by (cluster, namespace, pod, qos_class) (
                    kube_pod_status_qos_class{job="kube-state-metrics"} > 0
                  )
              * on (cluster, namespace, pod) group_left (phase)
                max by (cluster, namespace, pod, phase) (kube_pod_status_phase{job="kube-state-metrics"} > 0)
            * on (cluster, namespace, pod) group_left (workload, workload_type)
              max by (cluster, namespace, pod, workload, workload_type) (
                  label_join(
                    label_join(
                      kube_pod_owner{job="kube-state-metrics",owner_kind!~"ReplicaSet|DaemonSet|StatefulSet|Job"},
                      "workload",
                      "$1",
                      "owner_name"
                    ),
                    "workload_type",
                    "$1",
                    "owner_kind"
                  )
                or
                    kube_pod_owner{job="kube-state-metrics",owner_kind=~"ReplicaSet|DaemonSet|StatefulSet|Job"}
                  * on (cluster, namespace, pod) group_left (workload_type, workload)
                    namespace_workload_pod:kube_pod_owner:relabel
              )
          * on (cluster, namespace) group_left (workspace)
            max by (cluster, namespace, workspace) (kube_namespace_labels{job="kube-state-metrics"})
        )
      record: 'workspace_workload_node:kube_pod_info:'
      {{- if or .Values.defaultRules.additionalRuleLabels .Values.defaultRules.additionalRuleGroupLabels.whizardTelemetry }}
      labels:
        {{- with .Values.defaultRules.additionalRuleLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.defaultRules.additionalRuleGroupLabels.whizardTelemetry }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    - expr: |-
        label_replace(
          max by (cluster, node, role, internal_ip) (
                kube_node_info{job="kube-state-metrics"}
              * on (cluster, node) group_left (role)
                max by (cluster, node, role) (
                        (
                            kube_node_role{job="kube-state-metrics",role="worker"}
                          unless ignoring (role)
                            kube_node_role{job="kube-state-metrics",role=~"control-plane|edge"}
                        )
                      or
                        (
                            kube_node_role{job="kube-state-metrics",role="control-plane"}
                          unless ignoring (role)
                            kube_node_role{job="kube-state-metrics",role="edge"}
                        )
                    or
                      kube_node_role{job="kube-state-metrics",role="edge"}
                  or
                    topk by (cluster, node) (
                      1,
                        kube_node_role{job="kube-state-metrics"}
                      unless ignoring (role)
                        (kube_node_role{job="kube-state-metrics",role=~"edge|control-plane|worker|fakenode"})
                    )
                )
            or
                kube_node_info{job="kube-state-metrics"}
              unless on (cluster, node)
                kube_node_role{job="kube-state-metrics"}
          ),
          "host_ip",
          "$1",
          "internal_ip",
          "(.*)"
        )
      record: 'node_role_ip:kube_node_info:'
      {{- if or .Values.defaultRules.additionalRuleLabels .Values.defaultRules.additionalRuleGroupLabels.whizardTelemetry }}
      labels:
        {{- with .Values.defaultRules.additionalRuleLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.defaultRules.additionalRuleGroupLabels.whizardTelemetry }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}